// 509. Fibonacci Number

// Recurrence relation: F(n) = F(n-1) + F(n-2);

// Recurrsive implementation
/*
class Solution {
public:
    int fib(int n) {
        if (n == 0) return 0;
        if (n == 1) return 1;
        return fib(n-1) + fib(n-2);
    }
};
*/

// Memo implementation
/*
class Solution {
public:
    int fib(int n) {
        if (n <= 1) return n;
        // 0 counts as a number in the fib series
        vector<int> F(n+1, 0);
        // F[0] = 0;
        F[1] = 1;
        for (int i = 2; i <= n; ++i) {
            F[i] = F[i-1] + F[i-2];
            cout << F[i] << endl;
        }
        return F[n];
    }
};
*/

// Optimized for space
class Solution {
public:
    int fib(int n) {
        if (n <= 1) return n;
        int a = 0;
        int b = 1;
        int c;
        for (int i = 2; i <= n; ++i) {
            c = b + a;
            a = b;
            b = c;
        }
        return c;
    }
};
