// 62. Unique Paths
// iterative dp
class Solution {
public:
    // quadratic time and quadratic space;
    int uniquePaths(int m, int n) {
        // preallocate row with 1 since there is only 1 path;
        vector<vector<int>> memo(m, vector<int>(n, 1));
        for (int i = 1; i < m; ++i) {
            for (int j = 1; j < n; ++j) {
                memo[i][j] = memo[i-1][j] + memo[i][j-1];
            }
        }
        // return last element in the matrix;
        return memo[m-1][n-1];
    }
};
