// 191. Number of 1 Bits
class Solution {
public:
    int hammingWeight(uint32_t n) {
        int ones = 0;
        unsigned int mask = 1; 
        // cout << (n & mask) << " ";
        // logical AND between any number and mask 1 gives the least significant bit
        // check next bit by shifting the mask by one.
        for (int i = 0; i < 32; i++) {
            if ((n & mask) != 0) {
                ones++;
            }
            mask = mask << 1;
        }
        return ones;
    }
};